Starting build at Fri 15 Aug 2025 10:31:55 PM IST
make[1]: Entering directory '/home/kislay/Music/temp/DPI-MPI-MESH/library'
Elaborating with DPI...
verilator -cc alu_tile_noc.v calculator.v intermediate.v terminate.v \
	--exe sim.cpp  \
	--Mdir obj_dir \
	--top-module calculator \
	-CFLAGS "-O2 " \
	-LDFLAGS " -lstdc++" \
	--Wno-fatal --timing --trace
MetroMPI 1. Going for verilate function: verilate(argString) in verilator.cpp(main)
MetroMPI 2. Going for process function: process() in verilator.cpp(verilate)
metro_mpi() at 211 in verilator.cpp
MetroMPI Trying to print the nodes Def in V3Metro_MPI.h::HierCellsGraphVisitor 
Visiting: $root
    Instance: $root
    Module  : $root
    Hier(inst): $root
    Hier(mod) : $root
    Hash(mod) : fc80f6233082f8de618a56be675b32ac

Visiting: $root.int_con
    Instance: int_con
    Module  : intermediate
    Hier(inst): $root.int_con
    Hier(mod) : $root.intermediate
    Hash(mod) : 1673c9c1e71d42f5d5930872efda20dc

Visiting: $root.int_con.t0_0
    Instance: t0_0
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t0_0
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t0_0.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t0_0.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t0_1
    Instance: t0_1
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t0_1
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t0_1.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t0_1.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t0_2
    Instance: t0_2
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t0_2
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t0_2.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t0_2.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t1_0
    Instance: t1_0
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t1_0
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t1_0.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t1_0.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t1_1
    Instance: t1_1
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t1_1
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t1_1.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t1_1.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t1_2
    Instance: t1_2
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t1_2
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t1_2.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t1_2.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t2_0
    Instance: t2_0
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t2_0
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t2_0.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t2_0.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t2_1
    Instance: t2_1
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t2_1
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t2_1.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t2_1.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Visiting: $root.int_con.t2_2
    Instance: t2_2
    Module  : alu_tile_noc
    Hier(inst): $root.int_con.t2_2
    Hier(mod) : $root.intermediate.alu_tile_noc
    Hash(mod) : faa5da1052ec1dc49e58c2aba0040ad8

Visiting: $root.int_con.t2_2.term
    Instance: term
    Module  : terminate
    Hier(inst): $root.int_con.t2_2.term
    Hier(mod) : $root.intermediate.alu_tile_noc.terminate
    Hash(mod) : 9f10a6820727e4d489f812affb8969e7

Duplicate hash(es) found at level 1:
  Hash: faa5da1052ec1dc49e58c2aba0040ad8 (Max weight sum: 9)
    Module: alu_tile_noc, Instance: t0_0, Hier: $root.int_con.t0_0, Weight: 1
    Module: alu_tile_noc, Instance: t0_1, Hier: $root.int_con.t0_1, Weight: 1
    Module: alu_tile_noc, Instance: t0_2, Hier: $root.int_con.t0_2, Weight: 1
    Module: alu_tile_noc, Instance: t1_0, Hier: $root.int_con.t1_0, Weight: 1
    Module: alu_tile_noc, Instance: t1_1, Hier: $root.int_con.t1_1, Weight: 1
    Module: alu_tile_noc, Instance: t1_2, Hier: $root.int_con.t1_2, Weight: 1
    Module: alu_tile_noc, Instance: t2_0, Hier: $root.int_con.t2_0, Weight: 1
    Module: alu_tile_noc, Instance: t2_1, Hier: $root.int_con.t2_1, Weight: 1
    Module: alu_tile_noc, Instance: t2_2, Hier: $root.int_con.t2_2, Weight: 1
Marked module 'alu_tile_noc' as hierBlock(true).
Printing the instance to module map
Instance: t2_1, Module: alu_tile_noc
Instance: t2_0, Module: alu_tile_noc
Instance: t1_0, Module: alu_tile_noc
Instance: t2_2, Module: alu_tile_noc
Instance: t1_2, Module: alu_tile_noc
Instance: t1_1, Module: alu_tile_noc
Instance: t0_2, Module: alu_tile_noc
Instance: t0_1, Module: alu_tile_noc
Instance: term, Module: terminate
Instance: t0_0, Module: alu_tile_noc
Instance: int_con, Module: intermediate
%Warning-WIDTHTRUNC: alu_tile_noc.v:109:22: Operator ASSIGNW expects 2 bits on the Assign RHS, but Assign RHS's VARREF 'TILE_X' generates 8 bits.
                                          : ... note: In instance 'calculator.int_con.t2_2'
  109 |     wire [1:0] cur_x = TILE_X;
      |                      ^
                     ... For warning description see https://verilator.org/warn/WIDTHTRUNC?v=5.036
                     ... Use "/* verilator lint_off WIDTHTRUNC */" and lint_on around source to disable this message.
%Warning-WIDTHTRUNC: alu_tile_noc.v:110:22: Operator ASSIGNW expects 2 bits on the Assign RHS, but Assign RHS's VARREF 'TILE_Y' generates 8 bits.
                                          : ... note: In instance 'calculator.int_con.t2_2'
  110 |     wire [1:0] cur_y = TILE_Y;
      |                      ^
%Warning-WIDTHTRUNC: intermediate.v:445:27: Operator FUNCREF 'make_ctrl' expects 2 bits on the Function Argument, but Function Argument's MODDIV generates 32 or 4 bits.
                                          : ... note: In instance 'calculator.int_con'
  445 |             tmp_ctrl[0] = make_ctrl(1'b0, (mode % 3), (mode / 3), mode);
      |                           ^~~~~~~~~
%Warning-WIDTHTRUNC: intermediate.v:445:27: Operator FUNCREF 'make_ctrl' expects 2 bits on the Function Argument, but Function Argument's DIV generates 32 or 4 bits.
                                          : ... note: In instance 'calculator.int_con'
  445 |             tmp_ctrl[0] = make_ctrl(1'b0, (mode % 3), (mode / 3), mode);
      |                           ^~~~~~~~~
%Warning-WIDTHEXPAND: intermediate.v:488:33: Operator EQ expects 32 bits on the RHS, but RHS's VARREF 'dx' generates 2 bits.
                                           : ... note: In instance 'calculator.int_con'
  488 |                         if ((tx == dx) && (ty == dy)) begin
      |                                 ^~
                      ... For warning description see https://verilator.org/warn/WIDTHEXPAND?v=5.036
                      ... Use "/* verilator lint_off WIDTHEXPAND */" and lint_on around source to disable this message.
%Warning-WIDTHEXPAND: intermediate.v:488:47: Operator EQ expects 32 bits on the RHS, but RHS's VARREF 'dy' generates 2 bits.
                                           : ... note: In instance 'calculator.int_con'
  488 |                         if ((tx == dx) && (ty == dy)) begin
      |                                               ^~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.c' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
                ... For warning description see https://verilator.org/warn/LATCH?v=5.036
                ... Use "/* verilator lint_off LATCH */" and lint_on around source to disable this message.
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.r' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.dx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.dy' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.md' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.tx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.ty' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk10.nidx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk11.nidx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk5.local_res' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk6.nidx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk7.nidx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk8.nidx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.unnamedblk2.unnamedblk3.unnamedblk4.unnamedblk9.nidx' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.in_a' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.in_b' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.in_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: intermediate.v:414:5: Latch inferred for signal 'calculator.int_con.in_valid' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  414 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t0_0.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t0_1.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t0_2.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t1_0.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t1_1.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t1_2.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t2_0.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t2_1.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-LATCH: alu_tile_noc.v:134:5: Latch inferred for signal 'calculator.int_con.t2_2.unnamedblk1.resp_ctrl' (not all control paths of combinational always assign a value)
                                    : ... Suggest use of always_latch for intentional latches
  134 |     always @(*) begin
      |     ^~~~~~
%Warning-UNOPTFLAT: intermediate.v:23:16: Signal unoptimizable: Circular combinational logic: 'calculator.int_con.in_a'
   23 |     reg [63:0] in_a  [0:8];
      |                ^~~~
                    ... For warning description see https://verilator.org/warn/UNOPTFLAT?v=5.036
                    ... Use "/* verilator lint_off UNOPTFLAT */" and lint_on around source to disable this message.
                    intermediate.v:23:16:      Example path: calculator.int_con.in_a
                    intermediate.v:414:5:      Example path: ALWAYS
                    intermediate.v:23:16:      Example path: calculator.int_con.in_a
%Warning-UNOPTFLAT: intermediate.v:24:16: Signal unoptimizable: Circular combinational logic: 'calculator.int_con.in_b'
   24 |     reg [63:0] in_b  [0:8];
      |                ^~~~
                    intermediate.v:24:16:      Example path: calculator.int_con.in_b
                    intermediate.v:414:5:      Example path: ALWAYS
                    intermediate.v:23:16:      Example path: calculator.int_con.in_a
                    intermediate.v:414:5:      Example path: ALWAYS
%Warning-UNOPTFLAT: intermediate.v:25:16: Signal unoptimizable: Circular combinational logic: 'calculator.int_con.in_ctrl'
   25 |     reg [15:0] in_ctrl [0:8];
      |                ^~~~~~~
                    intermediate.v:25:16:      Example path: calculator.int_con.in_ctrl
                    intermediate.v:414:5:      Example path: ALWAYS
                    intermediate.v:23:16:      Example path: calculator.int_con.in_a
                    intermediate.v:414:5:      Example path: ALWAYS
%Warning-UNOPTFLAT: intermediate.v:26:16: Signal unoptimizable: Circular combinational logic: 'calculator.int_con.in_valid'
   26 |     reg        in_valid[0:8];
      |                ^~~~~~~~
                    intermediate.v:26:16:      Example path: calculator.int_con.in_valid
                    intermediate.v:414:5:      Example path: ALWAYS
                    intermediate.v:23:16:      Example path: calculator.int_con.in_a
                    intermediate.v:414:5:      Example path: ALWAYS
- V e r i l a t i o n   R e p o r t: Verilator 5.036 2025-04-27 rev v5.036-2-g9876d27ad
- Verilator: Built from 0.126 MB sources in 5 modules, into 1.816 MB in 11 C++ files needing 0.000 MB
- Verilator: Walltime 0.132 s (elab=0.003, cvt=0.105, bld=0.000); cpu 0.131 s on 1 threads; alloced 35.461 MB
make[1]: Leaving directory '/home/kislay/Music/temp/DPI-MPI-MESH/library'
Build finished at Fri 15 Aug 2025 10:31:55 PM IST
